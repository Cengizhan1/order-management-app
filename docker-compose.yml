version: '3.9'

services:
  db:
    image: mysql:latest
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=order-management
    ports:
      - "3307:3306"
    networks:
      - order-management-network
  app:
    depends_on:
      - db
    image: 'order-management:latest'
    build:
      context: .
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - order-management-network
    env_file: ./.env
    ports:
      - "8000:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://db:3307/order-management?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false",
        "spring.datasource.username" : "root",
        "spring.datasource.password" : "123456",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - order-management-network
  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - order-management-network
networks:
  order-management-network: